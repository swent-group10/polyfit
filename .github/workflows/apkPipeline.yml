name: Build Android APK

on:
  push:
    branches:
      - 'release/**'
      - 'main'
      - 'fix/signed-apk-issue'


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v4
      - name: Create Google Services JSON File
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo "$GOOGLE_SERVICES_JSON" | base64 --decode > ./app/google-services.json
      - name: Set up Spoonacular API keys
        run: |
          echo "sdk.dir=${ANDROID_HOME}" > local.properties
          echo "X_RapidAPI_Key=${{ secrets.X_RapidAPI_Key }}" >> local.properties
          echo "X_RapidAPI_Host=${{ secrets.X_RapidAPI_Host }}" >> local.properties
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Decode Keystore (for signing the APK)
        run: echo "${{ secrets.KEYSTORE }}" | base64 --decode > ./app/keystore.jks
      - name: Inject secrets for signing APK into gradle.properties
        run: |
          echo "RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}" >> gradle.properties
          echo "RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}" >> gradle.properties
          echo "RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}" >> gradle.properties
      - name: Build Release APK
        run: ./gradlew assembleRelease
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: app/build/outputs/apk/release/app-release.apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}-${{ github.run_number }}
          release_name: Release ${{ github.ref_name }} Version ${{ github.run_number }}
          draft: false
          prerelease: false
          body: "Changes in this release:\n${{ join('\n', github.event.commits.*.message) }}"
        if: startsWith(github.ref, 'refs/heads/release/')
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release-unsigned.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
        if: startsWith(github.ref, 'refs/heads/release/')